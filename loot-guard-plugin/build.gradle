plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

project.layout.buildDirectory.set(rootProject.layout.buildDirectory)

repositories {
    mavenCentral()

    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }

    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }

    maven { url "https://repo.dmulloy2.net/repository/public/" }
    maven {
        url = uri("https://maven.pkg.github.com/Carlmem/LuminasLib")
        credentials {
            username = System.getenv("GITHUB_ACTOR")
            password = System.getenv("GITHUB_TOKEN")
        }
    }

}

ext {
    fasterXmlVersion = '2.14.2'
    grpcVersion = '1.57.1'
    luminasLib = '0.0.1'
    glowingVersion = "1.4.3"
}

dependencies {
    //compileOnly "io.papermc.paper:paper-api:$paperVersion"
    compileOnly 'org.spigotmc:spigot-api:1.19.2-R0.1-SNAPSHOT'

    implementation "fr.skytasul:glowingentities:$glowingVersion"
    implementation "com.google.inject:guice:$guiceVersion"
    implementation project(":loot-guard-api")
    implementation "dev.carlmem:luminaslib:$luminasLib"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    useJUnitPlatform()
}

tasks.jar.dependsOn(":loot-guard-api:build")
